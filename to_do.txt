PRIORITY 1

    To do -

        There is a noticable lag between the document loading and the dates populating
        on the client side and the subtotal, vat and total calculating clientside.  I suggest
        we hide the grid until this is done and show the user a nice loading icon.  The simplest
        way to do this would be to hide the dom element server side and show the loading icon
        and then have a script loaded onto the page last which just shows the content.

        Rather than allow deleting transactions, like Xero, i prefer voiding.  So give the
        purchase ledger transaction a status 'x' and leave the lines.  The only thing to
        delete would be the nominal ledger transactions.  This way the 'void' action can
        be undone - just pass the PL tran to the create_nominal_entries function again.

        Create items, suppliers and vat codes on the fly.

    Tests

        Tests should be moved to the accountancy app.  This will mean creating special models just for tests - will
        need to read into the best way of doing this.  And when we come to say, include discount, we shouldn't
        change all our tests.  Instead we just create a new mock model for a new set of tests to test discount.

        Tests need to also check GET requests for CREATE and EDIT.
        
        Need to test header_form failing for create.  Check other failures tested also.

        Line ordering.  I think we just need to make sure the lines are ordered by line no at the model level.
        This way they show correctly in the edit view.... Need to test this.

        Test that credit note entered as positive is negative.  Same for refund etc.  Do for Edit and Create.
        Just one test for each.  But this shouldn't be a problem.

        Form testing - test we get the errors first for wrong doing.  Lesser of a priority is
        testing the forms work as this has been checked in views already.

        Test entering blank lines is ok

    Transaction Enquiry -

        The search function ignores "A", "the" etc so my supplier called "A" is ignored.  I think the solution
        is to use Trigram search but the question is how do i do this over multiple fields?  I think this is possible
        but cannot find an example.  The Q object is rumoured to be the answer but i couldn't get it to work.  A question
        therefore for SO probably.

        The select2 widget probably should be replaced with selectize which is what we are using in create / edit views.

    Edit -

        If an invoice is changed to a payment should we bother deleting the lines?  I suppose it should
        and we should also warn the user about this.

    Create -

        'Add supplier' does not work.  Need to create a pop up form on the fly.

    Templates -

        FIX ME - change 'matching_formset" to "match_formset" in the template

    MISC -

        Fix the __len__ method of the model choice field override in accountancy.fields

        save is called on the header_obj potentially twice in CreateTransactions.  I assume the second time
        will not hit the DB because Django first checks if the fields have changed.  But i need to confirm this.

        Many times i am checking whether the transaction type is a payment or not.  Need a global helper to do this
        instead of repeating the code all over the place.

PRIORITY 2

    Warn user if the vat value they override is not the goods * rate

    Refactor the styles in styles.css and ui_elem_styles.css.  Styles in the first sheet probably belong to the second.
    The second sheet could do with being renamed