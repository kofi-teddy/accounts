PRIORITY 1

    Edit -

        Priortise writing the tests first but need to check a few things -

            1. my edit forms have empty_permitted=True.  I would have expected False
            2. initial = {} for edit forms even though there is obviously the DB model data
            3. how do i access the existing instance on the form ?

        For the match forms we need to check the value is -

            0  < value < self.instance.value + due

        Because due is what is left on the header AFTER self.instance.value has been paid

        Start writing a few tests

        Add table-bordered to the 'New Matching Transactions' table

    Create -

        Instead of reloading a new view depending on transaction type we will
        just use the same form and view for all but hide the unneeded parts clientside
        depending on the type chosen.  This will mean creating empty lineformset
        datasets for the CreatePayment tests.

        Test that credit note entered as positive is negative.  Same for refund etc

        Test entering blank lines is ok

        Subtotal, vat, total needs to be set on the server - for errors and editing

        Add supplier does not work.  Need to create a pop up form on the fly

        Form testing - test we get the errors first for wrong doing.  Lesser of a priority is
        testing the forms work as this has been checked in views already.

    Fix the __len__ method of the model choice field override in accountancy.fields

    Enable Ordering for the Outstanding transactions table

    FIX ME - change 'matching_formset" to "match_formset" in the template

    save is called on the header_obj potentially twice in CreateTransactions.  I assume the second time
    will not hit the DB because Django first checks if the fields have changed.  But i need to confirm this.

PRIORITY 2

    Warn user if the vat value they override is not the goods * rate

    Refactor the styles in styles.css and ui_elem_styles.css.  Styles in the first sheet probably belong to the second.
    The second sheet could do with being renamed



Python

    @classonlymethod decorator