Objectives -

    QUESTION - When we have an instance in our model form does Django JOIN the related tables or not
    by default?

    Good resource - https://hakibenita.com/django-group-by-sql#how-to-group-by-multiple-fields

    VAT

        Nominal journal header needs a output or input flag for the vat analysis

    SALES

        Create a bad debt write off journal transaction type for the sales ledger

    Nominal

        Have i tested voiding nominal transactions and the status is changed to "v" on the header?

        If many lines are analysed to the same to the same nominal it makes sense to group.
        But if the transactions total zero it is misleading.  I realised this when i thought
        a nominal journal with vat analysed was not updating the vat control account correctly
        but in fact i had analysed the same amount on the debit and credit side so it totalled
        zero. If this is possible in sql it isn't going to be through the ORM.

        This shouldn't be an issue though in practice because you wouldn't do something like this.
        
            LEAVE IT AS IT IS.

    UI

        Input Dropdown Widget Dropdown button does not show in Firefox .... Arghghghgh

            I WILL DO THIS WHEN I HAVE PUT THE APP UP ON HEROKU

        Should we show a client side error if the matching is wrong?  Even prevent form submission?

        	LEAVE THIS FOR NOW AS CLIENT SIDE VALIDATION HAS BEEN IGNORED SO FAR.  NEEDS TO BE CONSIDERED
        	AS PART OF THAT MORE GENERAL TOPIC.

    Tests

        Basic sales tests.  A create, edit and void for Invoice and payment at least.

        Create a test which checks a cash book not being POSTED for a payment and a b/f payment.  This isn't tested
        at the moment.  This should just be a form test.

        Check that a transaction cannot be matched to itself.  At form level as well as UI.  UI shouldn't be a problem now
        as i have fixed the bug in the outstanding transactions query.

        If we set an ordering on the transaction header models we will need to add a order_by to our ORM queries
        in the tests.  And probably for all of them ... what joy !

        All the trans types for PL have been checked for trans creation.  I haven't done this though for
        edit.  At a bare minimum i need to test negative inputs and editing transactions where the
        transaction being edited is matched to another transaction where the matched_by is the other
        transaction.  A lesser priority would be repeating the same sort of matching tests done for CREATE.
        Besides i've tested this already for invoice and payments in the non nominal transaction testing.
        I would be very surprised if any bugs were discovered during this any of testing.  Especially,
        the lower priority testing.

            GIVEN THIS IS SO TIME CONSUMING AND I DOUBT THERE ANY BUGS THIS IS A LOW PRIORITY FOR NOW.

        Tests should be moved to the accountancy app.  This will mean creating special models just for tests - will
        need to read into the best way of doing this.  And when we come to say, include discount, we shouldn't
        change all our tests.  Instead we just create a new mock model for a new set of tests to test discount.

            THIS WOULD MEAN ALSO COPYING ALL THE VIEWS AND URLS.  EASIER TO JUST KEEP THE PURCHASES APP BUT RENAME
            TO "DUMMY_PURCHASES" OR SOMETHING

    Create -

        BaseTransaction has the matching_is_valid method for BaseCreateTransaction.  Should move to this latter
        class.  Need to check other methods to see whether should be moved also.

    Templates -

        FIX ME - change 'matching_formset" to "match_formset" in the template

    ACCOUNTANCY PACKAGE

        jQueryDataTables class should be renamed to contain "Mixin" because this is what is is.

    ENHANCEMENTS -  

        Provide link from match record to the transaction header.  Ideally this would open up in a different tab in the
        browser.