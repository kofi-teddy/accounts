PRIORITY 1

    To do -

        Rather than allow deleting transactions, like Xero, i prefer voiding.  So give the
        purchase ledger transaction a status 'x' and leave the lines.  The only thing to
        delete would be the nominal ledger transactions.  This way the 'void' action can
        be undone - just pass the PL tran to the create_nominal_entries function again.

    UI

        Input Dropdown Widget Dropdown button does not show in Firefox .... Arghghghgh

            I WILL DO THIS WHEN I HAVE PUT THE APP UP ON HEROKU 

    Tests

        Tests should be moved to the accountancy app.  This will mean creating special models just for tests - will
        need to read into the best way of doing this.  And when we come to say, include discount, we shouldn't
        change all our tests.  Instead we just create a new mock model for a new set of tests to test discount.

            THIS WOULD MEAN ALSO COPYING ALL THE VIEWS AND URLS.  EASIER TO JUST KEEP THE PURCHASES APP BUT RENAME
            TO "DUMMY_PURCHASES" OR SOMETHING

        Form testing - test we get the errors first for wrong doing.  Lesser of a priority is
        testing the forms work as this has been checked in views already.

        Test that credit note entered as positive is negative.  Same for refund etc.  Do for Edit and Create.
        Just one test for each.  But this shouldn't be a problem.

    Transaction Enquiry -

        The search function ignores "A", "the" etc so my supplier called "A" is ignored.  I think the solution
        is to use Trigram search but the question is how do i do this over multiple fields?  I think this is possible
        but cannot find an example.  The Q object is rumoured to be the answer but i couldn't get it to work.  A question
        therefore for SO probably.

        The select2 widget probably should be replaced with selectize which is what we are using in create / edit views.

    Edit -

        If an invoice is changed to a payment should we bother deleting the lines?  I suppose it should
        and we should also warn the user about this.

    Create -

        Implement the "add" or "add and add another" logic.  Former should redirect to read afterwards - perhaps check Xero.
        The other should obviously redirect to create view again

    Templates -

        FIX ME - change 'matching_formset" to "match_formset" in the template

    MISC -

        Fix the __len__ method of the model choice field override in accountancy.fields

        save is called on the header_obj potentially twice in CreateTransactions.  I assume the second time
        will not hit the DB because Django first checks if the fields have changed.  But i need to confirm this.

        Many times i am checking whether the transaction type is a payment or not.  Need a global helper to do this
        instead of repeating the code all over the place.