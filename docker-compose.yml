version: '3.7'

# This departs from my standard set up because there arose the need to install
# a postgres sql extension so we could use the TrigramSimilarity Django feature -
# namely, the pg_trgm extension
# The newt up is based on this - https://gist.github.com/leopoldodonnell/b0b7e06943bd389560184d948bdc2d5b

# A further move came with the improvement of the pgadmin GUI - previously i was using adminer.
# Our python app runs on our host network and connects to the DB over the host - see settings.py in django project
# But our pgadmin is running in another container so it connects to the other container - the DB - via
# the hostname 'postgres'

services:

    postgres:
        build:
            context: .
            dockerfile: pg-Dockerfile
        ports:
            - 5432:5432
        environment:
            - POSTGRES_DB=dspace
            - POSTGRES_USER=dspace
        # You can put all of your env vars in env_file, but you may also only
        # want to put secrets in it and put the file in .gitignore
        env_file:
            - proj.env
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        command: ["postgres", "-c", "log_statement=all"]

    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - postgres
        ports:
            - 5555:80
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
            PGADMIN_DEFAULT_PASSWORD: admin
        restart: unless-stopped

volumes:
    postgres_data: