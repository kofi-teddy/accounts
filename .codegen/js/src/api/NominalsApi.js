/*
 * Snippets API
 * Test description
 *
 * OpenAPI spec version: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/Nominal'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse200'), require('../model/Nominal'));
  } else {
    // Browser globals (root is window)
    if (!root.SnippetsApi) {
      root.SnippetsApi = {};
    }
    root.SnippetsApi.NominalsApi = factory(root.SnippetsApi.ApiClient, root.SnippetsApi.InlineResponse200, root.SnippetsApi.Nominal);
  }
}(this, function(ApiClient, InlineResponse200, Nominal) {
  'use strict';

  /**
   * Nominals service.
   * @module api/NominalsApi
   * @version v1
   */

  /**
   * Constructs a new NominalsApi. 
   * @alias module:api/NominalsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the nominalsCreate operation.
     * @callback module:api/NominalsApi~nominalsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsCreate = function(format, data, callback) {
      var postBody = data;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsCreate");
      }

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsCreate");
      }


      var pathParams = {
        'format': format
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominal-list{format}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsList operation.
     * @callback module:api/NominalsApi~nominalsListCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/NominalsApi~nominalsListCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.nominalsList = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/nominals/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalListCreate operation.
     * @callback module:api/NominalsApi~nominalsNominalListCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsNominalListCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalListCreate = function(data, callback) {
      var postBody = data;

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsNominalListCreate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominal-list', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalListList operation.
     * @callback module:api/NominalsApi~nominalsNominalListListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page A page number within the paginated result set.
     * @param {module:api/NominalsApi~nominalsNominalListListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.nominalsNominalListList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/nominals/nominal-list', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsDelete operation.
     * @callback module:api/NominalsApi~nominalsNominalsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:api/NominalsApi~nominalsNominalsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.nominalsNominalsDelete = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsDelete");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}/', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsDelete_0 operation.
     * @callback module:api/NominalsApi~nominalsNominalsDelete_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:api/NominalsApi~nominalsNominalsDelete_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    this.nominalsNominalsDelete_0 = function(format, id, callback) {
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsNominalsDelete_0");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsDelete_0");
      }


      var pathParams = {
        'format': format,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}{format}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsPartialUpdate operation.
     * @callback module:api/NominalsApi~nominalsNominalsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsNominalsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsPartialUpdate = function(id, data, callback) {
      var postBody = data;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsPartialUpdate");
      }

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsNominalsPartialUpdate");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}/', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsPartialUpdate_0 operation.
     * @callback module:api/NominalsApi~nominalsNominalsPartialUpdate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsNominalsPartialUpdate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsPartialUpdate_0 = function(format, id, data, callback) {
      var postBody = data;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsNominalsPartialUpdate_0");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsPartialUpdate_0");
      }

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsNominalsPartialUpdate_0");
      }


      var pathParams = {
        'format': format,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}{format}', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsRead operation.
     * @callback module:api/NominalsApi~nominalsNominalsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:api/NominalsApi~nominalsNominalsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsRead = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsRead");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsRead_0 operation.
     * @callback module:api/NominalsApi~nominalsNominalsRead_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:api/NominalsApi~nominalsNominalsRead_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsRead_0 = function(format, id, callback) {
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsNominalsRead_0");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsRead_0");
      }


      var pathParams = {
        'format': format,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}{format}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsUpdate operation.
     * @callback module:api/NominalsApi~nominalsNominalsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsNominalsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsUpdate = function(id, data, callback) {
      var postBody = data;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsUpdate");
      }

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsNominalsUpdate");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}/', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsNominalsUpdate_0 operation.
     * @callback module:api/NominalsApi~nominalsNominalsUpdate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Nominal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {Number} id A unique integer value identifying this nominal.
     * @param {module:model/Nominal} data 
     * @param {module:api/NominalsApi~nominalsNominalsUpdate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Nominal}
     */
    this.nominalsNominalsUpdate_0 = function(format, id, data, callback) {
      var postBody = data;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsNominalsUpdate_0");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling nominalsNominalsUpdate_0");
      }

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling nominalsNominalsUpdate_0");
      }


      var pathParams = {
        'format': format,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Nominal;

      return this.apiClient.callApi(
        '/nominals/nominals/{id}{format}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsRead operation.
     * @callback module:api/NominalsApi~nominalsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page A page number within the paginated result set.
     * @param {module:api/NominalsApi~nominalsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.nominalsRead = function(format, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsRead");
      }


      var pathParams = {
        'format': format
      };
      var queryParams = {
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/nominals/nominal-list{format}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the nominalsRead_0 operation.
     * @callback module:api/NominalsApi~nominalsRead_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} format 
     * @param {module:api/NominalsApi~nominalsRead_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    this.nominalsRead_0 = function(format, callback) {
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling nominalsRead_0");
      }


      var pathParams = {
        'format': format
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/nominals/{format}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
